{"version":3,"sources":["../../src/v1/broker/broker.tsx","../../src/v1/use-table.tsx","../../src/v1/use-pagination/use-pagination.tsx","../../src/v1/use-page/use-page.tsx","../../src/v1/table/header.tsx","../../src/v1/table/footer.tsx","../../src/v1/broker/get-svg.tsx","../../src/v1/table/cell.tsx","../../src/v1/table/table.tsx","with-hook/header.tsx","with-hook/footer.tsx","with-hook/with-hook.tsx","with-table-impl/with-table-impl.tsx","App.tsx","index.tsx"],"names":["getHeaderDetails","cols","col","name","headerStyle","getAccessor","accessor","optional","o","getText","arr","newString","word","truncate","data","useTable","limit","skip","total","getSkip","React","getLimit","setSkip","setLimit","setCurrentPage","currentPage","usePagination","page","p","i","Math","setPage","usePage","headerData","paginationData","pages","start","end","a","Array","b","getPaginationGroup","goToPage","index","goNext","goPrev","prev","disablePrevButton","disableNextButton","firstDataIndexInPage","lastDataIndexInPage","Header","className","key","style","flex","Footer","theme","themeColor","disabled","onClick","type","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","e","color","undefined","getSvg","cx","cy","r","xmlns","Cell","src","image","alt","bgColor","textColor","j","format","Date","linkComponent","showButton","title","text","to","link","svg","TableComponent","getBackgroundColorFromType","mem","tailwind","TableHead","map","align","preventDefault","aria-label","entityData","id","WithHookImplmentation","rows","Fragment","createdAt","WithTableImplementation","bold","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2517f85.chunk.js","sourcesContent":["import type { ColumnProps, HeaderDetailsProps } from '../types'\n\nexport const getHeaderDetails = (cols: ColumnProps[]): HeaderDetailsProps[] =>\n  cols?.map((col: ColumnProps) => {\n    return {\n      name: col?.name,\n      headerStyle: col?.headerStyle\n    }\n  })\n\nexport const getAccessor = (accessor: any, data: any, optional = null) =>\n  accessor\n    .split('.')\n    .reduce((o: any, i: number) => o[i] || optional || 'N/A', data)\n\nexport const getText = (arr: any[], data: any) => {\n  let newString: string = ''\n  arr.map((word) => {\n    newString += `${\n      getAccessor(word, data)?.replace(/(<([^>]+)>)/gi, '') || 'Not Specified'\n    } `\n  })\n  return newString\n}\n\nexport const truncate = (data: string, truncate: number | null = null) => {\n  if (truncate) {\n    if (data.split('').length > truncate) {\n      return data.split('').slice(0, truncate).join('') + '...'\n    }\n    return data\n  }\n  return data\n}\n","import { getHeaderDetails } from './broker/broker'\nimport type {\n  HeaderProps,\n  UseTableOutputProps,\n  UseTableInputProps,\n  UseTableFooterProps\n} from './types'\nimport usePage from './use-page'\nimport usePagination from './use-pagination'\n\nconst useTable = ({\n  limit: getLimit,\n  skip: getSkip,\n  cols,\n  total\n}: UseTableInputProps): UseTableOutputProps => {\n  const { limit, setSkip, currentPage, setCurrentPage } = usePagination({\n    getLimit,\n    getSkip\n  })\n  const { page } = usePage({ total, limit })\n\n  //header data to be used\n  const headerData: HeaderProps = {\n    col: getHeaderDetails(cols)\n  }\n\n  const goToPage = (index: number): void => {\n    setCurrentPage(index)\n  }\n\n  const goNext = (page: number): void => {\n    setCurrentPage(page)\n    setSkip(page * limit)\n  }\n\n  const goPrev = (): void => {\n    setCurrentPage((prev) => prev - 1)\n  }\n\n  const getPaginationGroup = (): number[] => {\n    let start: number, end: number\n    if (page.length <= 10) {\n      start = 1\n      end = page.length\n    } else {\n      if (currentPage <= 6) {\n        start = 1\n        end = 10\n      } else if (currentPage + 4 >= page.length) {\n        start = page.length - 9\n        end = page.length\n      } else {\n        start = currentPage - 5\n        end = currentPage + 4\n      }\n    }\n    let a = [...Array(end + 1 - start)]\n    let b: number[] = []\n    a.map((_, i) => {\n      b.push(i)\n    })\n    return b.map((i) => start + i)\n  }\n\n  const paginationData: UseTableFooterProps = {\n    currentPage: currentPage,\n    pages: getPaginationGroup(),\n    goToPage,\n    goNext,\n    goPrev,\n    disablePrevButton: currentPage === 1,\n    disableNextButton: currentPage >= page.length,\n    firstDataIndexInPage:\n      currentPage === 1 ? 1 : currentPage * limit - limit + 1,\n    lastDataIndexInPage: currentPage === 1 ? limit : currentPage * limit\n  }\n\n  return {\n    headerData,\n    paginationData\n  }\n}\n\nexport default useTable\n","import * as React from 'react'\n\nexport interface UsePaginationInputtputProps {\n  getLimit: number\n  getSkip?: number\n}\n\nexport interface UsePaginationOutputProps {\n  skip: number\n  setSkip: React.Dispatch<React.SetStateAction<number>>\n  limit: number\n  currentPage: number\n  setLimit: React.Dispatch<React.SetStateAction<number>>\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\n}\n\nconst usePagination = ({\n  getLimit,\n  getSkip\n}: UsePaginationInputtputProps): UsePaginationOutputProps => {\n  const [skip, setSkip] = React.useState<number>(getSkip || 0)\n  const [limit, setLimit] = React.useState<number>(getLimit || 10)\n  const [currentPage, setCurrentPage] = React.useState<number>(1)\n\n  return {\n    skip,\n    setSkip,\n    limit,\n    setLimit,\n    setCurrentPage,\n    currentPage\n  }\n}\n\nexport default usePagination\n","import * as React from 'react'\n\nimport { UsePageInputProps, UsePageOutputProps } from './types'\n\nconst usePage = ({ limit, total }: UsePageInputProps): UsePageOutputProps => {\n  const [page, setPage] = React.useState<number[]>([1])\n\n  React.useEffect(() => {\n    let p = []\n    total = total || 0\n    for (let i = 0; i < Math.ceil(total / limit); i++) {\n      p.push(i + 1)\n    }\n    setPage(p)\n  }, [limit, total])\n\n  return { page, setPage }\n}\n\nexport default usePage\n","import * as React from 'react'\nimport { HeaderDetailsProps, HeaderProps } from '../types'\n\nconst Header: React.FC<HeaderProps> = ({ col: cols }) => {\n  return (\n    <React.Fragment>\n      <tr className={'flex flex-row border-b border-gray-200'}>\n        {cols.map((col: HeaderDetailsProps, i: number) => (\n          <React.Fragment key={i}>\n            <th\n              style={{ flex: col?.headerStyle?.flex || 1 }}\n              className={` px-6 py-3 border-none  bg-gray-50 text-${\n                col?.headerStyle?.align || 'left'\n              } text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider`}\n            >\n              {col.name}\n            </th>\n          </React.Fragment>\n        ))}\n      </tr>\n    </React.Fragment>\n  )\n}\n\nexport default Header\n","import * as React from 'react'\nimport type { ThemeProps, UseTableFooterProps } from '../types'\n\ninterface Props {\n  total: number\n  paginationData: UseTableFooterProps\n  theme?: ThemeProps\n}\nconst Footer: React.FC<Props> = ({ total, paginationData, theme }) => {\n  let themeColor = theme\n    ? theme?.tailwind\n      ? `bg-${theme?.color}-500`\n      : ''\n    : ''\n\n  return (\n    <React.Fragment>\n      <nav className='mt-2 px-4 py-3 flex items-center justify-between sm:px-6'>\n        <div className='hidden sm:block'>\n          <p className='text-sm font-light leading-5 text-gray-700'>\n            Showing\n            <span className='font-medium mx-3'>\n              {paginationData.firstDataIndexInPage}\n            </span>\n            to\n            <span className='font-medium mx-3'>\n              {paginationData.lastDataIndexInPage}\n            </span>\n            of\n            <span className=' font-medium mx-3'>{total}</span>\n            results\n          </p>\n        </div>\n        <div className='flex-1 flex justify-between sm:justify-end items-center'>\n          <nav className='relative z-0 inline-flex shadow-sm'>\n            <button\n              disabled={paginationData.disablePrevButton}\n              onClick={() => {\n                paginationData.goPrev()\n              }}\n              type='button'\n              className={`relative inline-flex ${\n                paginationData.disablePrevButton &&\n                'cursor-not-allowed opacity-50'\n              } items-center px-2 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150`}\n              aria-label='Previous'\n            >\n              <svg\n                width={17}\n                height={17}\n                viewBox='0 0 24 24'\n                fill='none'\n                stroke='currentColor'\n                strokeWidth={2}\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                className='feather feather-chevrons-right'\n              >\n                <path d='M11 17L6 12 11 7' />\n                <path d='M18 17L13 12 18 7' />\n              </svg>\n            </button>\n\n            {paginationData.pages.map((p: number, i: number) => (\n              <React.Fragment key={i}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault()\n                    paginationData.goToPage(p)\n                  }}\n                  style={{ color: !theme?.tailwind ? theme?.color : undefined }}\n                  type='button'\n                  className={`-ml-px relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium focus:z-10 focus:outline-none ${\n                    paginationData.currentPage === p &&\n                    `${themeColor} text-white`\n                  } transition ease-in-out duration-150`}\n                >\n                  {p}\n                </button>\n              </React.Fragment>\n            ))}\n\n            <button\n              type='button'\n              onClick={() => {\n                paginationData.goNext(paginationData.currentPage + 1)\n              }}\n              disabled={paginationData.disableNextButton}\n              className={`-ml-px relative inline-flex ${\n                paginationData.disableNextButton &&\n                'cursor-not-allowed opacity-50'\n              } items-center px-2 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150`}\n              aria-label='Next'\n            >\n              <svg\n                width={17}\n                height={17}\n                viewBox='0 0 24 24'\n                fill='none'\n                stroke='currentColor'\n                strokeWidth={2}\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                className='feather feather-chevrons-right'\n              >\n                <path d='M13 17L18 12 13 7' />\n                <path d='M6 17L11 12 6 7' />\n              </svg>\n            </button>\n          </nav>\n        </div>\n      </nav>\n    </React.Fragment>\n  )\n}\n\nexport default Footer\n","import * as React from 'react'\ntype TypeOptionsProps =\n  | 'view'\n  | 'edit'\n  | 'workflow'\n  | 'generate'\n  | 'archive'\n  | 'transfer'\n  | 'delete'\n\nconst getSvg = (type: TypeOptionsProps) => {\n  switch (type) {\n    case 'view':\n      return (\n        <svg\n          width={18}\n          height={18}\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth={1}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          className='feather feather-eye'\n        >\n          <path d='M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z' />\n          <circle cx={12} cy={12} r={3} />\n        </svg>\n      )\n    case 'edit':\n      return (\n        <svg\n          width={18}\n          height={18}\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth={1}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          className='feather feather-edit'\n        >\n          <path d='M11 4H4a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2v-7' />\n          <path d='M18.5 2.5a2.121 2.121 0 013 3L12 15l-4 1 1-4 9.5-9.5z' />\n        </svg>\n      )\n    case 'workflow':\n      return (\n        <svg\n          width={18}\n          height={18}\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth={1}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          className='feather feather-flag'\n        >\n          <path d='M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z' />\n          <path d='M4 22L4 15' />\n        </svg>\n      )\n    case 'generate':\n      return (\n        <svg\n          width={18}\n          height={18}\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth={1}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          className='feather feather-send'\n        >\n          <path d='M22 2L11 13' />\n          <path d='M22 2L15 22 11 13 2 9 22 2z' />\n        </svg>\n      )\n\n    case 'delete':\n      return (\n        <svg\n          width={18}\n          height={18}\n          xmlns='http://www.w3.org/2000/svg'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16'\n          />\n        </svg>\n      )\n    case 'archive':\n      return (\n        <svg\n          width={18}\n          height={18}\n          xmlns='http://www.w3.org/2000/svg'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4'\n          />\n        </svg>\n      )\n    case 'transfer':\n      return (\n        <svg\n          width={18}\n          height={18}\n          xmlns='http://www.w3.org/2000/svg'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1'\n          />\n        </svg>\n      )\n    default:\n      return\n  }\n}\n\nexport default getSvg\n","import * as React from 'react'\nimport { ColumnProps, RowsProps } from '../types'\nimport getSvg from '../broker/get-svg'\nimport { getAccessor, truncate, getText } from '../broker/broker'\nimport { format } from 'date-fns'\n\ninterface Props {\n  col: ColumnProps\n  data: any\n}\n\nconst Cell: React.FC<Props> = ({ col, data }) => {\n  //check for text plus image\n  if (col?.type === 'with-image') {\n    return (\n      <React.Fragment>\n        <td\n          style={{ flex: col?.headerStyle?.flex || 1 }}\n          className={`border-none px-6 py-4 whitespace-no-wrap text-${\n            col?.bodyAlign || 'left'\n          }`}\n        >\n          <div className='flex items-center'>\n            <div className='flex-shrink-0 h-10 w-10'>\n              <img\n                className='h-10 w-10 rounded-full cursor-pointer'\n                src={\n                  col?.accessor\n                    ? getAccessor(col?.accessor, data, col?.image)\n                    : col?.image\n                }\n                alt=''\n              />\n            </div>\n            <div className='ml-4'>\n              {col.rows.map((r, i) => (\n                <React.Fragment key={i}>\n                  {r.type === 'text' ? (\n                    <React.Fragment>\n                      <div\n                        className={`text-sm leading-5 ${\n                          r.bold ? 'font-medium' : 'font-light'\n                        } text-gray-900`}\n                      >\n                        {r?.accessor &&\n                          truncate(getText(r.accessor, data), r?.truncate)}\n                      </div>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment key={i}>\n                      {r?.formatBanner && (\n                        <React.Fragment>\n                          <span\n                            className={`px-2 inline-flex text-xs leading-5 font-semibold font-light rounded-full bg-${\n                              r?.formatBanner(data).bgColor\n                            }-100 text-${r?.formatBanner(data).textColor}-800`}\n                          >\n                            {r?.accessor &&\n                              truncate(getText(r.accessor, data), r?.truncate)}\n                          </span>\n                        </React.Fragment>\n                      )}\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        </td>\n      </React.Fragment>\n    )\n  }\n\n  //check for only-text\n  if (col.type === 'only-text') {\n    return (\n      <React.Fragment>\n        <td\n          style={{ flex: col?.headerStyle?.flex || 1 }}\n          className={`border-none px-6 py-4 whitespace-no-wrap text-${\n            col?.bodyAlign || 'left'\n          }`}\n        >\n          {col.rows.map((r: RowsProps, i: number) => (\n            <React.Fragment key={i}>\n              {r.type === 'text' ? (\n                <React.Fragment>\n                  {r.default ? (\n                    <React.Fragment>\n                      <div\n                        key={i}\n                        className={`text-sm leading-5 ${\n                          r.bold ? 'font-medium' : 'font-light'\n                        } text-gray-900`}\n                      >\n                        {r.default}\n                      </div>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <div\n                        key={i}\n                        className={`text-sm leading-5 ${\n                          r.bold ? 'font-medium' : 'font-light'\n                        } text-gray-900`}\n                      >\n                        {r?.accessor &&\n                          truncate(getText(r.accessor, data), r?.truncate)}\n                      </div>\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {r?.formatBanner && (\n                    <React.Fragment>\n                      {r.default ? (\n                        <React.Fragment>\n                          <span\n                            className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-${\n                              r?.formatBanner(data).bgColor\n                            }-100 text-${r?.formatBanner(data).textColor}-800`}\n                          >\n                            {r.default}\n                          </span>\n                        </React.Fragment>\n                      ) : (\n                        <React.Fragment>\n                          {r?.accessor &&\n                            r?.accessor.map((a: string, j: number) => (\n                              <React.Fragment key={j}>\n                                {/* {r.list ? (\n                                  <React.Fragment>\n                                    {data[a].map((list, k) => {\n                                      if (k < r?.truncate) {\n                                        return (\n                                          <React.Fragment key={k}>\n                                            <span className='px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800'>\n                                              {list[r.list.accessor]}\n                                            </span>{' '}\n                                          </React.Fragment>\n                                        )\n                                      }\n                                    })}\n                                    {data[a].length > r?.truncate && (\n                                      <span>...</span>\n                                    )}\n                                  </React.Fragment>\n                                ) : ( */}\n                                <React.Fragment>\n                                  <span\n                                    className={`px-2 inline-flex text-xs  leading-5 font-semibold rounded-full bg-green-100 text-green-800`}\n                                  >\n                                    {r?.formatBanner &&\n                                      (typeof r?.formatBanner(data[a])?.data ===\n                                      'boolean'\n                                        ? r?.formatBanner(data[a])?.data\n                                          ? 'Yes'\n                                          : 'No'\n                                        : r?.formatBanner(data[a])?.data)}\n                                  </span>\n                                </React.Fragment>\n                                {/* )} */}\n                              </React.Fragment>\n                            ))}\n                        </React.Fragment>\n                      )}\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          ))}\n        </td>\n      </React.Fragment>\n    )\n  }\n\n  //check for date and time\n  if (col.type === 'date-time') {\n    return (\n      <React.Fragment>\n        <td\n          style={{ flex: col?.headerStyle?.flex || 1 }}\n          className={`border-none border-b border-gray-50 px-6 py-4 whitespace-no-wrap text-${\n            col?.bodyAlign || 'left'\n          }`}\n        >\n          {col.rows.map((r: RowsProps, i: number) => (\n            <React.Fragment key={i}>\n              {r?.accessor &&\n                r?.accessor.map((a, i) => (\n                  <div\n                    key={i}\n                    className={`text-sm leading-5 ${\n                      r.bold ? 'font-medium' : 'font-light'\n                    } text-gray-900`}\n                  >\n                    {format(new Date(data[a]), r?.format || 'PPPpp')}\n                  </div>\n                ))}\n            </React.Fragment>\n          ))}\n        </td>\n      </React.Fragment>\n    )\n  }\n\n  //check if html element\n  if (col?.type === 'html-element') {\n    return (\n      <React.Fragment>\n        <td\n          style={{ flex: col?.headerStyle?.flex || 1 }}\n          className={`border-gray-100 px-6 py-4 whitespace-no-wrap text-${\n            col?.bodyAlign || 'left'\n          }`}\n        >\n          {col.rows.map((r: RowsProps, i) => (\n            <React.Fragment key={i}>\n              <div\n                key={i}\n                className={`text-sm leading-5 ${\n                  r.bold ? 'font-medium' : 'font-light'\n                } text-gray-900`}\n              >\n                {r?.accessor &&\n                  truncate(getText(r?.accessor, data), r?.truncate)}\n              </div>\n            </React.Fragment>\n          ))}\n        </td>\n      </React.Fragment>\n    )\n  }\n\n  //check for actions\n  if (col?.type === 'actions') {\n    return (\n      <React.Fragment>\n        <td\n          style={{ flex: col?.headerStyle?.flex || 1 }}\n          className={`px-6 py-4 whitespace-no-wrap text-${\n            col?.bodyAlign || 'left'\n          }`}\n        >\n          {col.rows.map(\n            (\n              {\n                type,\n                text,\n                accessor,\n                link,\n                onClick,\n                svg,\n                linkComponent: Link,\n                showButton\n              }: RowsProps,\n              i: number\n            ) => (\n              <React.Fragment key={i}>\n                {showButton && showButton(data) && (\n                  <React.Fragment>\n                    {type !== 'button' ? (\n                      <Link\n                        title={text}\n                        to={`${link && link}/${\n                          data[accessor ? accessor?.[0] : 0]\n                        }`}\n                        className='w-8 h-8 mr-1 inline-flex border border-grey-500 items-center justify-center rounded-full bg-transparent hover:bg-blue-200'\n                      >\n                        {svg && getSvg(svg)}\n                      </Link>\n                    ) : (\n                      <button\n                        onClick={() => onClick && onClick(data)}\n                        title={text}\n                        className='w-8 h-8 mr-1 inline-flex border border-grey-500 items-center justify-center rounded-full bg-transparent hover:bg-blue-200 focus:outline-none'\n                      >\n                        {svg && getSvg(svg)}\n                      </button>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            )\n          )}\n        </td>\n      </React.Fragment>\n    )\n  }\n\n  // check for number type\n  if (col?.type === 'number') {\n    return (\n      <React.Fragment>\n        <td\n          style={{ flex: col?.headerStyle?.flex || 1 }}\n          className={`px-6 py-4 whitespace-no-wrap text-${\n            col?.bodyAlign || 'left'\n          }`}\n        >\n          {col.rows.map((r: RowsProps, i: number) => (\n            <React.Fragment key={i}>\n              <React.Fragment>\n                {r?.accessor &&\n                  r?.accessor.map((a: string, j: number) => (\n                    <div\n                      key={j}\n                      className={`text-sm leading-5 ${\n                        r.bold ? 'font-medium' : 'font-light'\n                      } text-gray-900`}\n                    >\n                      {r?.formatNumber && r?.formatNumber(data[a])}\n                    </div>\n                  ))}\n              </React.Fragment>\n            </React.Fragment>\n          ))}\n        </td>\n      </React.Fragment>\n    )\n  }\n  return <React.Fragment />\n}\n\nexport default Cell\n","import * as React from 'react'\nimport type { ColumnProps, ThemeProps } from '../types'\nimport useTable from '../use-table'\nimport TableHead from './header'\nimport TableFooter from './footer'\nimport TableCell from './cell'\n\nexport interface TableComponentInputProps {\n  limit: number\n  skip?: number\n  cols: ColumnProps[]\n  total: number\n  data: any[]\n  type?: 'striped' | 'raw'\n  theme?: ThemeProps\n}\n\nconst TableComponent: React.FC<TableComponentInputProps> = ({\n  limit,\n  skip,\n  cols,\n  total,\n  theme,\n  data,\n  type\n}) => {\n  const { headerData, paginationData } = useTable({\n    cols: cols,\n    limit,\n    skip, // skip can be undefined ... it'd be defaulted to 0 though\n    total: total\n  })\n\n  // lets us know if its striped or raw\n  let getBackgroundColorFromType = (i: number) =>\n    type === 'raw' ? 'bg-white' : i % 2 === 0 ? 'bg-white' : 'bg-gray-50'\n\n  return (\n    <React.Fragment>\n      <div className={'flex flex-col '}>\n        <div className='-my-2 py-2  sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8'>\n          <div className='align-middle inline-block min-w-full shadow  sm:rounded-none'>\n            <table className='min-w-full border-none '>\n              <thead className={''}>\n                <TableHead col={headerData?.col} />\n              </thead>\n              <tbody className='bg-white'>\n                {data?.map((mem: any, i: number) => (\n                  <React.Fragment key={i}>\n                    <tr\n                      className={\n                        getBackgroundColorFromType(i) +\n                        ' flex flex-row border-b border-gray-200'\n                      }\n                    >\n                      {cols.map((col: ColumnProps, j: number) => (\n                        <React.Fragment key={j}>\n                          <TableCell col={col} data={mem} />\n                        </React.Fragment>\n                      ))}\n                    </tr>\n                  </React.Fragment>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <TableFooter\n        theme={theme}\n        total={total}\n        paginationData={paginationData}\n      />\n    </React.Fragment>\n  )\n}\n\nTableComponent.defaultProps = {\n  type: 'striped',\n  theme: {\n    tailwind: true,\n    color: 'blue'\n  }\n}\n\nexport default TableComponent\n","import * as React from 'react'\nimport type { HeaderProps, HeaderDetailsProps } from 'poly-table/dist/v1/types'\n\ninterface Props {\n  cols: HeaderProps\n}\n\nconst TableHead: React.FC<Props> = ({ cols }) => {\n  return (\n    <React.Fragment>\n      <thead>\n        <tr>\n          {cols?.col?.map((col: HeaderDetailsProps, i: number) => (\n            <React.Fragment key={i}>\n              <th\n                className={`px-6 py-3 border-b border-gray-200 bg-gray-50 text-${\n                  col?.headerStyle?.align ?? 'left'\n                } text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider`}\n              >\n                {col?.name}\n              </th>\n            </React.Fragment>\n          ))}\n        </tr>\n      </thead>\n    </React.Fragment>\n  )\n}\n\nexport default TableHead\n","import * as React from 'react'\n\ninterface FooterProps {\n  pages: number[]\n  currentPage: number\n  goToPage: (index: number) => void\n  goNext: (index: number) => void\n  goPrev: VoidFunction\n  disablePrevButton: boolean\n  disableNextButton: boolean\n  firstDataIndexInPage: number\n  lastDataIndexInPage: number\n}\ninterface Props {\n  total: number\n  paginationData: FooterProps\n}\nconst Footer: React.FC<Props> = ({ total, paginationData }) => {\n  return (\n    <React.Fragment>\n      <nav className='mt-2 px-4 py-3 flex items-center justify-between sm:px-6'>\n        <div className='hidden sm:block'>\n          <p className='text-sm font-light leading-5 text-gray-700'>\n            Showing\n            <span className='font-medium mx-3'>\n              {paginationData.firstDataIndexInPage}\n            </span>\n            to\n            <span className='font-medium mx-3'>\n              {paginationData.lastDataIndexInPage}\n            </span>\n            of\n            <span className=' font-medium mx-3'>{total}</span>\n            results\n          </p>\n        </div>\n        <div className='flex-1 flex justify-between sm:justify-end items-center'>\n          <nav className='relative z-0 inline-flex shadow-sm'>\n            <button\n              disabled={paginationData.disablePrevButton}\n              onClick={(e) => {\n                e.preventDefault()\n                paginationData.goPrev()\n              }}\n              type='button'\n              className={`relative inline-flex ${\n                paginationData.disablePrevButton &&\n                'cursor-not-allowed opacity-50'\n              } items-center px-2 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150`}\n              aria-label='Previous'\n            >\n              <svg\n                width={17}\n                height={17}\n                viewBox='0 0 24 24'\n                fill='none'\n                stroke='currentColor'\n                strokeWidth={2}\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                className='feather feather-chevrons-right'\n              >\n                <path d='M11 17L6 12 11 7' />\n                <path d='M18 17L13 12 18 7' />\n              </svg>\n            </button>\n\n            {paginationData.pages.map((p: number, i: number) => (\n              <React.Fragment key={i}>\n                <button\n                  onClick={(e) => {\n                    e.preventDefault()\n                    paginationData.goToPage(i)\n                  }}\n                  type='button'\n                  className={`-ml-px relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium focus:z-10 focus:outline-none ${\n                    paginationData.currentPage === i && 'bg-blue-400 text-white'\n                  } transition ease-in-out duration-150`}\n                >\n                  {p}\n                </button>\n              </React.Fragment>\n            ))}\n\n            <button\n              type='button'\n              onClick={(e) => {\n                e.preventDefault()\n                paginationData.goNext(paginationData.currentPage + 1)\n              }}\n              disabled={paginationData.disableNextButton}\n              className={`-ml-px relative inline-flex ${\n                !paginationData.disablePrevButton &&\n                'cursor-not-allowed opacity-50'\n              } items-center px-2 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150`}\n              aria-label='Next'\n            >\n              <svg\n                width={17}\n                height={17}\n                viewBox='0 0 24 24'\n                fill='none'\n                stroke='currentColor'\n                strokeWidth={2}\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                className='feather feather-chevrons-right'\n              >\n                <path d='M13 17L18 12 13 7' />\n                <path d='M6 17L11 12 6 7' />\n              </svg>\n            </button>\n          </nav>\n        </div>\n      </nav>\n    </React.Fragment>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nimport { useTable } from 'poly-table'\nimport type { ColumnProps } from 'poly-table/dist/v1/types'\nimport TableHead from './header'\nimport Footer from './footer'\n\nconst data = {\n  entityData: [\n    {\n      id: 1,\n      name: 'Entity 1'\n    }\n  ],\n  total: 2\n}\n\nconst WithHookImplmentation = () => {\n  const cols: ColumnProps[] = [\n    {\n      name: 'Entity Name',\n      rows: [],\n      type: 'only-text',\n      headerStyle: {\n        align: 'center'\n      },\n      accessor: 'name'\n    },\n    {\n      name: 'Created At',\n      rows: [],\n      headerStyle: {\n        align: 'center'\n      },\n      type: 'only-text',\n      accessor: 'name'\n    }\n  ]\n\n  const { paginationData, headerData } = useTable({\n    cols: cols,\n    limit: 1,\n    // skip, // you can add skip here\n    total: data?.total\n  })\n  return (\n    <React.Fragment>\n      <div className={'container'}>\n        <table>\n          <TableHead cols={headerData} />\n        </table>\n        <Footer total={data?.total} paginationData={paginationData} />\n      </div>\n\n      <style>\n        {`\n          table, th, td {\n            border: 1px solid black;\n            border-collapse: collapse;\n          }\n\n          table {\n            width:100%\n          }\n\n          .container {\n            margin-left:5vw;\n            margin-right:5vw;\n            margin-top:2vw;\n          }\n        `}\n      </style>\n    </React.Fragment>\n  )\n}\n\nexport default WithHookImplmentation\n","import * as React from 'react'\nimport { Table } from 'poly-table'\nimport type { ColumnProps } from 'poly-table/dist/v1/types'\n\nconst data = {\n  entityData: [\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 1,\n      name: 'Entity 1',\n      createdAt: new Date()\n    },\n    {\n      id: 2,\n      name: 'Entity 1',\n      createdAt: new Date()\n    }\n  ],\n  total: 200\n}\n\nconst WithTableImplementation = () => {\n  const cols: ColumnProps[] = [\n    {\n      name: 'Entity Name',\n      rows: [\n        {\n          type: 'text',\n          accessor: ['name'],\n          bold: true\n        }\n      ],\n      type: 'only-text',\n      headerStyle: {\n        align: 'center',\n        flex: 2\n      },\n      accessor: 'name'\n    },\n    {\n      name: 'Created At',\n      rows: [\n        {\n          type: 'date',\n          accessor: ['createdAt'],\n          format: 'PPPpp'\n        }\n      ],\n      headerStyle: {\n        align: 'center'\n      },\n      type: 'date-time',\n      accessor: 'name'\n    }\n  ]\n  return (\n    <React.Fragment>\n      <div className={'container'}>\n        <Table\n          limit={10}\n          cols={cols}\n          total={data?.total}\n          data={data?.entityData}\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default WithTableImplementation\n","import React from 'react'\n\nimport 'poly-table/dist/index.css'\nimport WithHookImplmentation from './with-hook'\nimport WithTableImplmentation from './with-table-impl'\n\nconst App = () => {\n  return (\n    <div>\n      <div className={'container'}>\n        <span>Implementation with hook</span>\n      </div>\n      <WithHookImplmentation />\n      <div className={'container'}>\n        <span>Implementation with table component</span>\n      </div>\n      <WithTableImplmentation />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\nimport './tailwind.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}